# ðŸš€ Java Problems

---

## 1. Sum of Natural Numbers
Find the **sum of first N natural numbers** using a loop.  

**Input:** `N = 5`  
**Output:** `15`  

---

## 2. Multiplication Table
Take a number from the user and print its **multiplication table** (up to 10).  

**Input:** `N = 7`  
**Output:**  


---

## 3. Factorial of a Number
Calculate the **factorial of a number N** using a loop.  

**Input:** `N = 5`  
**Output:** `120`  

---

## 4. Count Digits in a Number
Count the **number of digits** in an integer using a loop.  

**Input:** `98765`  
**Output:** `5`  

---

## 5. Sum of Digits
Input a number and find the **sum of its digits**.  

**Input:** `432`  
**Output:** `9`  

---

## 6. Palindrome Number
Check if a given number is a **palindrome** (reads the same backward).  

**Input:** `num = 121`  
**Output:** `Palindrome`  

**Input:** `num = 123`  
**Output:** `Not Palindrome`  

---

## 7. Fibonacci Series
Print the **Fibonacci series** up to N terms using a loop.  

**Input:** `N = 7`  
**Output:**  



---

## 8. Prime Number Check
Check if a number is **prime** using a loop.  

**Input:** `num = 17`  
**Output:** `Prime`  

**Input:** `num = 20`  
**Output:** `Not Prime`  

---

## 9. Armstrong Number
Check if a number is an **Armstrong number**.  
An Armstrong number is a number that is equal to the sum of cubes of its digits.  

**Input:** `num = 153`  
**Output:** `Armstrong`  

**Input:** `num = 123`  
**Output:** `Not Armstrong`  

---

## 10. Strong Number
Check if a number is a **Strong number**.  
A Strong number is a number whose sum of factorials of digits equals the number itself.  

**Input:** `num = 145`  
**Output:** `Strong`  

**Input:** `num = 123`  
**Output:** `Not Strong`  

---

## 11. Pythagorean Triplets
Generate all **Pythagorean triplets** with values smaller than a given limit.  

**Input:** `limit = 20`  
**Output:**  
